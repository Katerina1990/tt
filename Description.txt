Робот MyTank:
- на всем протяжении жизни танка сканирует пространство, перемещается и крутит пушку.
- перемещается постоянно изменяя направление, если подходит к правой или левой границе - то движется горизонтально, если подходит 
к верхней или нижней границе - движется вертикально. При этом отслеживается, чтобы танк не врезался в границы, и по возможности 
в другие танки.
- радар постоянно вращается, отслеживая метоположение других танков. Если противник найден - берется направление на противника, танк 
поворачивается в сторону противника, вычисляется расстояние до противника, и танк едет в сторону противника, пушка поворачивается на 
противника и происходит выстрел.
- пушка, танк и радар вращаются независимо друг от друга
- робот стремится двигаться по границе по горизонтали или вертикали, когда робот приблизился к цели он должен 
все время менять направление движения и не стоять на месте
- обновление целевых позиций для атаки происходит следующим образом:
	// проходим через всех роботов на карте
		for (RobotData enemy : enemyMap.values()) {

			double bV = Rules.getBulletSpeed(FIREPOWER);
			double eX = enemy.scannedX;
			double eY = enemy.scannedY;
			double eV = enemy.scannedVelocity;
			double eH = enemy.scannedHeading;

			//константы для вычисления квадратичных коэффициенов
			double A = (eX - getX()) / bV;
			double B = (eY - getY()) / bV;
			double C = eV / bV * Math.sin(eH);
			double D = eV / bV * Math.cos(eH);

			// квадратичные коэффициенты a*(1/t)^2 + b*(1/t) + c = 0
			double a = A * A + B * B;
			double b = 2 * (A * C + B * D);
			double c = (C * C + D * D - 1);

			// вычисляем дискриминант.
			double discrim = b * b - 4 * a * c;
			if (discrim >= 0) {
				// 2 решения по времени
				double t1 = 2 * a / (-b - Math.sqrt(discrim));
				double t2 = 2 * a / (-b + Math.sqrt(discrim));

				// Выбераем минимальное положительное время или ближайшее к 0, если время отрицательное
				double t = Math.min(t1, t2) >= 0 ? Math.min(t1, t2) : Math.max(t1, t2);

				// вычисляем целевую позицию для атаки, куда будет указывать наша пушка в момент времни t.
				double targetX = eX + eV * t * Math.sin(eH);
				double targetY = eY + eV * t * Math.cos(eH);

				// ограничиваем цели на стенах
				double minX = HALF_ROBOT_SIZE;
				double minY = HALF_ROBOT_SIZE;
				double maxX = getBattleFieldWidth() - HALF_ROBOT_SIZE;
				double maxY = getBattleFieldHeight() - HALF_ROBOT_SIZE;

				enemy.targetX = limit(targetX, minX, maxX);
				enemy.targetY = limit(targetY, minY, maxY);
			}
		}
- в качестве целевого танка для атаки выбирается тот, расстояние до которого минимально

  